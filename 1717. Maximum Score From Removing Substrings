class Solution {
public:
    string removePattern(string s, char first, char second, int &count) {
        stack<char> st;
        for (char c : s) {
            if (!st.empty() && st.top() == first && c == second) {
                st.pop(); 
                count++;
            } else {
                st.push(c);
            }
        }

        string result = "";
        while (!st.empty()) {
            result += st.top();
            st.pop();
        }
        reverse(result.begin(), result.end());
        return result;
    }

    int maximumGain(string s, int x, int y) {
        int abCount = 0, baCount = 0;

        if (x > y) {
            s = removePattern(s, 'a', 'b', abCount); 
            s = removePattern(s, 'b', 'a', baCount);  
        } else {
            s = removePattern(s, 'b', 'a', baCount); 
            s = removePattern(s, 'a', 'b', abCount);  
        }

        return abCount * x + baCount * y;
    }
};
