class Solution {
    long long mod = 1e9+7;
public:
    int numSubseq(vector<int>& nums, int target) {

        int n = nums.size();
        sort(nums.begin(), nums.end());

        vector<long long>power(n,1);
        for(int i=1; i<n; i++) {
            power[i] = (power[i-1]*2)%mod;
        }
        long long ans = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] < target) {
                int idx = upper_bound(nums.begin(), nums.end(), target - nums[i]) - nums.begin();
                int cnt = idx-1-i;
                if(cnt >= 0)
                ans = (ans + power[idx-1-i]) % mod;
            }
        }
        return ans;
    }
};
