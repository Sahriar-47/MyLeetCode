class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<vector<int>>adj(numCourses);
        for(auto &it: prerequisites) {
            int u = it[0];
            int v = it[1];
            adj[v].push_back(u);
        }

        vector<int>indegree(numCourses, 0);
        for(int node=0; node<numCourses; node++) {
            for(auto &child: adj[node]) {
                indegree[child]++;
            }
        }

        queue<int>q;
        for(int node=0; node<numCourses; node++) {
            if(indegree[node] == 0) {
                q.push(node);
            }
        }

        vector<int>ans;
        while(!q.empty()) {
            int node = q.front();
            q.pop();
            ans.push_back(node);

            for(auto &child: adj[node]) {
                indegree[child]--;
                if(indegree[child] == 0) {
                    q.push(child);
                }
            }
        }

        if(ans.size() != numCourses)
        return {};
        else
        return ans;
    }
};
