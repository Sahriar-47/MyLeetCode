class Solution {
public:

    int oneDArrayComp(vector<int> &vec) {
        int res = 0;
        int consecutive = 0;
        for(int i=0; i<vec.size(); i++) {
            if(vec[i] == 0) {
                consecutive = 0;
            }
            else {
                consecutive ++;
            }
            res += consecutive;
        }
        return res;
    }
    int numSubmat(vector<vector<int>>& mat) {
        int n = mat.size();
        int m = mat[0].size();
        
        int result = 0;
        for(int i=0; i<n; i++) {
            vector<int>vec(m, 1);
            for(int j=i; j<n; j++) {

                for(int k=0; k<m; k++) {
                    vec[k] &= mat[j][k];
                }

                result += oneDArrayComp(vec);
            }
        }

        return result;
    }
};
